package test;

import static org.junit.Assert.*;

import java.util.ArrayList;

import org.junit.Before;
import org.junit.Test;

import parser.ExtractPostData;
import parser.PostDate;
import util.ReadFileBuffer;

public class TestExtractPostData {

	ArrayList<String> list;
	ExtractPostData extractor;
	int testType=3;
	
	String email_expected;
	String date_expected;
	String subject_expected;
	String postFileName;
		
	
	@Before
	public void setup(){
		setupExpectedValues();
		list = ReadFileBuffer.readToBuffer("C://Users//adrianoc//Documents//GitHub//SEWORLD-Statistics//data//",postFileName);
		extractor =  new ExtractPostData();
		list = extractor.scopeList(list);
		
		
	}
	
	
	private void setupExpectedValues(){
		
		if(testType==1){
			postFileName="SEWORLD  approval required (672FDD7E).eml";
			email_expected="samia.bouzefrane@lecnam.net";
			date_expected="Fri, 18 Mar 2016 21:39:19 +0000";
			subject_expected="Deadline Approaching: IEEE International Conference on Cloud and Big Data Computing";
		}		
		else{
			postFileName="SEWORLD  approval required (5079B351).eml";
			email_expected="Johann.M.Schumann@nasa.gov";
			date_expected="Sat, 19 Mar 2016 19:25:20 -0700";
			subject_expected="Call for Participation: Survey on Model-based Software Engineering and Autogenerated Code";
		}
	}
	
	
	@Test
	public void testExtractSingleSenderEmail() {

		String line = "This message  was originally  submitted by <adrianoc@uci.edu>  to the";

		String expected= "adrianoc@uci.edu";
	
		String actual = extractor.extractEmail(line);
		assertTrue("Sender emails don't match, expected: "+expected +", actual "+ actual, expected.matches(actual));
	}
	
	
	@Test
	public void testExtractSenderFromPost() {
		setup();
		String actual = extractor.extractSenderFromPost(list);
		assertTrue("Sender emails don't match, expected: "+email_expected +", actual "+ actual, email_expected.matches(actual));
	}
	

	@Test
	public void testExtractReceiveDate() {
		setup();
		String actual = extractor.extractDateFromPost(list);
				
		PostDate dateExpected = new PostDate(date_expected);
		PostDate dateActual = new PostDate(actual);
		
		assertTrue("Sender minutes don't match, expected:"+dateExpected.minute.intValue() +", actual:"+ dateActual.minute.intValue(), 
				dateExpected.minute.intValue() ==dateActual.minute.intValue());
		
		//assertTrue("Sender dates don't match, expected:"+expected +", actual:"+ actual, expected.matches(actual));
	}

	@Test
	public void testExtractSubject(){
		setup();
		String actual = extractor.extractSubjectFromPost(list);
		assertTrue("Sender emails don't match, expected: "+subject_expected +", actual: "+ actual, subject_expected.trim().matches(actual.trim()));
	}
}
